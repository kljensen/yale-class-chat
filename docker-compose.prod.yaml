version: "3.4"
volumes:
  prod_deps:
  node_deps:
  acme_challenge:
  letsencrypt:
    external: true
services:
  db:
    image: postgres:12.1-alpine
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
  app:
    build: app
    logging:
      driver: "json-file"
      options:
        max-size: "1m"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=db
      - PORT=4000
      - MIX_ENV=prod
      - CAS_BASE_URL=${CAS_BASE_URL}
      - CAS_SERVICE_VALIDATE_BASE_URL=${CAS_SERVICE_VALIDATE_BASE_URL}
      - CAS_CALLBACK_URL=${CAS_CALLBACK_URL}
      - SECRET_KEY_BASE=${SECRET_KEY_BASE}
      - DOMAIN=${DOMAIN}
    volumes:
      - type: bind
        source: ./app
        target: /app
      - prod_deps:/app/deps/
      - node_deps:/app/assets/node_modules
      - acme_challenge:/app/priv/static/.well-known/acme-challenge/
      - letsencrypt:/etc/letsencrypt/
      - "./tls/dhparam.pem:/etc/dhparam.pem"
    ports:
      - "0.0.0.0:80:80"
      - "0.0.0.0:443:443"
    depends_on:
      - db
    entrypoint:
      - ./run.sh
    command:
      - prod-server
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 40s
  tls:
    image: certbot/certbot:v1.3.0
    entrypoint: /certbot.sh
    depends_on:
      - app
    environment:
      - MIX_ENV=prod
    volumes:
      - letsencrypt:/etc/letsencrypt/
      - "./tls/certbot.sh:/certbot.sh"
      - acme_challenge:/tmp/webroot/.well-known/acme-challenge/

